{"version":3,"sources":["./node_modules/ng-lazyload-image/fesm2015/ng-lazyload-image.js","./src/app/components/card/card.component.html","./src/app/components/contact-card/contact-card.component.html","./src/app/components/input-search/input-search.component.html","./src/app/features/contact-list/contact-list.component.html","./src/app/components/card/card.component.scss","./src/app/components/card/card.component.ts","./src/app/components/card/card.module.ts","./src/app/components/card/index.ts","./src/app/components/contact-card/contact-card.component.scss","./src/app/components/contact-card/contact-card.component.ts","./src/app/components/contact-card/contact-card.module.ts","./src/app/components/input-search/input-search.component.scss","./src/app/components/input-search/input-search.component.ts","./src/app/components/input-search/input-search.module.ts","./src/app/features/contact-list/contact-list-routing.module.ts","./src/app/features/contact-list/contact-list.component.scss","./src/app/features/contact-list/contact-list.component.ts","./src/app/features/contact-list/contact-list.module.ts","./src/app/features/contact-list/index.ts","./src/app/features/contact-list/services/contact-list.facade.ts","./src/app/features/contact-list/services/contact-list.service.ts","./src/app/shared/index.ts","./src/app/shared/share.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACL;AACiF;AAC/D;AACkD;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,UAAU;AACxB,oBAAoB,wCAAwC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA,gBAAgB,uCAAuC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+CAAU;AACrB,sDAAsD,6DAAM;AAC5D;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,+CAAE;AACb;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,mCAAmC,6DAAM;AACzC;AACA;AACA;AACA;AACA,SAAS,IAAI,2DAAI,KAAK,+DAAQ,uCAAuC,0DAAG;AACxE;AACA;AACA;AACA,SAAS,IAAI,0DAAG,cAAc,iEAAU;AACxC;AACA,mBAAmB,+CAAE;AACrB,SAAS,GAAG,0DAAG;AACf;AACA;;AAEA;AACA;AACA,0BAA0B,0DAAY,GAAG;AACzC;AACA;AACA,oCAAoC,kDAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,0DAAG,8CAA8C,gEAAS;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU,gBAAgB,+CAAU;AACxC;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,yBAAyB,wDAAU;AACnC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,4DAAM,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","file":"features-contact-list-es2015.js","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { isPlatformServer } from '@angular/common';\nimport { EventEmitter, Input, Output, Directive, Inject, PLATFORM_ID, Optional, ElementRef, NgZone, NgModule } from '@angular/core';\nimport { Subject, Observable, of, ReplaySubject, empty } from 'rxjs';\nimport { filter, take, mergeMap, tap, map, catchError, switchMap, sampleTime, share, startWith } from 'rxjs/operators';\n\nconst cssClassNames = {\n    loaded: 'ng-lazyloaded',\n    loading: 'ng-lazyloading',\n    failed: 'ng-failed-lazyloaded'\n};\nfunction removeCssClassName(element, cssClassName) {\n    element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n    if (!element.className.includes(cssClassName)) {\n        element.className += ` ${cssClassName}`;\n    }\n}\nfunction hasCssClassName(element, cssClassName) {\n    return element.className && element.className.includes(cssClassName);\n}\n\nfunction getNavigator() {\n    return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n    return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n    return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n    if (isImageElement(element)) {\n        if (useSrcset && 'srcset' in element) {\n            element.srcset = imagePath;\n        }\n        else {\n            element.src = imagePath;\n        }\n    }\n    else {\n        element.style.backgroundImage = `url('${imagePath}')`;\n    }\n    return element;\n}\nfunction setSources(attrName) {\n    return (image) => {\n        const sources = image.parentElement.getElementsByTagName('source');\n        for (let i = 0; i < sources.length; i++) {\n            const attrValue = sources[i].getAttribute(attrName);\n            if (attrValue) {\n                // Check if `srcset` is supported by the current browser\n                if ('srcset' in sources[i]) {\n                    sources[i].srcset = attrValue;\n                }\n                else {\n                    sources[i].src = attrValue;\n                }\n            }\n        }\n    };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n    return (element, imagePath, useSrcset) => {\n        if (isImageElement(element) && isChildOfPicture(element)) {\n            setSourcesFn(element);\n        }\n        if (imagePath) {\n            setImage(element, imagePath, useSrcset);\n        }\n    };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\n\nconst end = ({ element }) => addCssClassName(element, cssClassNames.loaded);\nconst loadImage = ({ element, useSrcset, imagePath, decode }) => {\n    let img;\n    if (isImageElement(element) && isChildOfPicture(element)) {\n        const parentClone = element.parentNode.cloneNode(true);\n        img = parentClone.getElementsByTagName('img')[0];\n        setSourcesToLazy(img);\n        setImage(img, imagePath, useSrcset);\n    }\n    else {\n        img = new Image();\n        if (isImageElement(element) && element.sizes) {\n            img.sizes = element.sizes;\n        }\n        if (useSrcset && 'srcset' in img) {\n            img.srcset = imagePath;\n        }\n        else {\n            img.src = imagePath;\n        }\n    }\n    if (decode && img.decode) {\n        return img.decode().then(() => imagePath);\n    }\n    return new Promise((resolve, reject) => {\n        img.onload = () => resolve(imagePath);\n        img.onerror = () => reject(null);\n    });\n};\nconst setErrorImage = ({ element, errorImagePath, useSrcset }) => {\n    setImageAndSourcesToError(element, errorImagePath, useSrcset);\n    addCssClassName(element, cssClassNames.failed);\n};\nconst setLoadedImage = ({ element, imagePath, useSrcset }) => {\n    setImageAndSourcesToLazy(element, imagePath, useSrcset);\n};\nconst setup = ({ element, defaultImagePath, useSrcset }) => {\n    setImageAndSourcesToDefault(element, defaultImagePath, useSrcset);\n    if (hasCssClassName(element, cssClassNames.loaded)) {\n        removeCssClassName(element, cssClassNames.loaded);\n    }\n};\nconst isBot = navigator => {\n    if (navigator && navigator.userAgent) {\n        return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot/i.test(navigator.userAgent);\n    }\n    return false;\n};\nconst sharedPreset = {\n    finally: end,\n    loadImage,\n    setErrorImage,\n    setLoadedImage,\n    setup,\n    isBot\n};\n\nconst observers = new WeakMap();\nconst intersectionSubject = new Subject();\nfunction loadingCallback(entrys) {\n    entrys.forEach(entry => intersectionSubject.next(entry));\n}\nconst uniqKey = {};\nconst getIntersectionObserver = (attributes) => {\n    const scrollContainerKey = attributes.scrollContainer || uniqKey;\n    const options = {\n        root: attributes.scrollContainer || null\n    };\n    if (attributes.offset) {\n        options.rootMargin = `${attributes.offset}px`;\n    }\n    let observer = observers.get(scrollContainerKey);\n    if (!observer) {\n        observer = new IntersectionObserver(loadingCallback, options);\n        observers.set(scrollContainerKey, observer);\n    }\n    observer.observe(attributes.element);\n    return Observable.create((obs) => {\n        const subscription = intersectionSubject.pipe(filter(entry => entry.target === attributes.element)).subscribe(obs);\n        return () => {\n            subscription.unsubscribe();\n            observer.unobserve(attributes.element);\n        };\n    });\n};\n\nconst isVisible = ({ event }) => {\n    return event.isIntersecting;\n};\nconst getObservable = (attributes, _getInterObserver = getIntersectionObserver) => {\n    if (attributes.customObservable) {\n        return attributes.customObservable;\n    }\n    return _getInterObserver(attributes);\n};\nconst intersectionObserverPreset = Object.assign({}, sharedPreset, {\n    isVisible,\n    getObservable\n});\n\nconst isVisible$1 = () => {\n    return true;\n};\nconst getObservable$1 = () => {\n    return of('load');\n};\nconst loadImage$1 = ({ imagePath }) => {\n    return [imagePath];\n};\nconst ssrPreset = Object.assign({}, sharedPreset, {\n    isVisible: isVisible$1,\n    getObservable: getObservable$1,\n    loadImage: loadImage$1\n});\n\nfunction createHooks(platformId, options) {\n    const defaultPreset = intersectionObserverPreset;\n    const isBot = options && options.isBot ? options.isBot : defaultPreset.isBot;\n    if (isBot(getNavigator(), platformId)) {\n        return Object.assign(ssrPreset, { isBot });\n    }\n    else if (!options) {\n        return defaultPreset;\n    }\n    const hooks = {};\n    if (options.preset) {\n        Object.assign(hooks, options.preset);\n    }\n    else {\n        Object.assign(hooks, defaultPreset);\n    }\n    Object.keys(options)\n        .filter(key => key !== 'preset')\n        .forEach(key => {\n        hooks[key] = options[key];\n    });\n    return hooks;\n}\n\nfunction lazyLoadImage(hookSet, attributes) {\n    return (evntObservable) => {\n        return evntObservable.pipe(filter(event => hookSet.isVisible({\n            element: attributes.element,\n            event: event,\n            offset: attributes.offset,\n            scrollContainer: attributes.scrollContainer\n        })), take(1), mergeMap(() => hookSet.loadImage(attributes)), tap(imagePath => hookSet.setLoadedImage({\n            element: attributes.element,\n            imagePath,\n            useSrcset: attributes.useSrcset\n        })), map(() => true), catchError(() => {\n            hookSet.setErrorImage(attributes);\n            return of(false);\n        }), tap(() => hookSet.finally(attributes)));\n    };\n}\n\nlet LazyLoadImageDirective = class LazyLoadImageDirective {\n    constructor(el, ngZone, platformId, options) {\n        this.onLoad = new EventEmitter(); // Callback when an image is loaded\n        this.elementRef = el;\n        this.ngZone = ngZone;\n        this.propertyChanges$ = new ReplaySubject();\n        this.platformId = platformId;\n        this.hooks = createHooks(platformId, options);\n    }\n    ngOnChanges() {\n        this.propertyChanges$.next({\n            element: this.elementRef.nativeElement,\n            imagePath: this.lazyImage,\n            defaultImagePath: this.defaultImage,\n            errorImagePath: this.errorImage,\n            useSrcset: this.useSrcset,\n            offset: this.offset ? this.offset | 0 : 0,\n            scrollContainer: this.scrollTarget,\n            customObservable: this.customObservable,\n            decode: this.decode\n        });\n    }\n    ngAfterContentInit() {\n        // Don't do anything if SSR and the user isn't a bot\n        if (isPlatformServer(this.platformId) && !this.hooks.isBot(getNavigator(), this.platformId)) {\n            return null;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.scrollSubscription = this.propertyChanges$\n                .pipe(tap(attributes => this.hooks.setup(attributes)), switchMap(attributes => this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes))))\n                .subscribe(success => this.onLoad.emit(success));\n        });\n    }\n    ngOnDestroy() {\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    }\n};\n__decorate([\n    Input('lazyLoad'),\n    __metadata(\"design:type\", String)\n], LazyLoadImageDirective.prototype, \"lazyImage\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LazyLoadImageDirective.prototype, \"defaultImage\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], LazyLoadImageDirective.prototype, \"errorImage\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], LazyLoadImageDirective.prototype, \"scrollTarget\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Observable)\n], LazyLoadImageDirective.prototype, \"customObservable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], LazyLoadImageDirective.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], LazyLoadImageDirective.prototype, \"useSrcset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], LazyLoadImageDirective.prototype, \"decode\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], LazyLoadImageDirective.prototype, \"onLoad\", void 0);\nLazyLoadImageDirective = __decorate([\n    Directive({\n        selector: '[lazyLoad]'\n    }),\n    __param(2, Inject(PLATFORM_ID)), __param(3, Optional()), __param(3, Inject('options')),\n    __metadata(\"design:paramtypes\", [ElementRef, NgZone, Object, Object])\n], LazyLoadImageDirective);\n\nvar LazyLoadImageModule_1;\nlet LazyLoadImageModule = LazyLoadImageModule_1 = class LazyLoadImageModule {\n    static forRoot(options) {\n        return {\n            ngModule: LazyLoadImageModule_1,\n            providers: [{ provide: 'options', useValue: options }]\n        };\n    }\n};\nLazyLoadImageModule = LazyLoadImageModule_1 = __decorate([\n    NgModule({\n        declarations: [LazyLoadImageDirective],\n        exports: [LazyLoadImageDirective]\n    })\n], LazyLoadImageModule);\n\nclass Rect {\n    constructor(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    static fromElement(element) {\n        const { left, top, right, bottom } = element.getBoundingClientRect();\n        if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n            return Rect.empty;\n        }\n        else {\n            return new Rect(left, top, right, bottom);\n        }\n    }\n    static fromWindow(_window) {\n        return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n    }\n    inflate(inflateBy) {\n        this.left -= inflateBy;\n        this.top -= inflateBy;\n        this.right += inflateBy;\n        this.bottom += inflateBy;\n    }\n    intersectsWith(rect) {\n        return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n    }\n    getIntersectionWith(rect) {\n        const left = Math.max(this.left, rect.left);\n        const top = Math.max(this.top, rect.top);\n        const right = Math.min(this.right, rect.right);\n        const bottom = Math.min(this.bottom, rect.bottom);\n        if (right >= left && bottom >= top) {\n            return new Rect(left, top, right, bottom);\n        }\n        else {\n            return Rect.empty;\n        }\n    }\n}\nRect.empty = new Rect(0, 0, 0, 0);\n\nconst scrollListeners = new WeakMap();\nfunction sampleObservable(obs, scheduler) {\n    return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n}\n// Only create one scroll listener per target and share the observable.\n// Typical, there will only be one observable per application\nconst getScrollListener = (scrollTarget) => {\n    if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n        console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n        return empty();\n    }\n    const scrollListener = scrollListeners.get(scrollTarget);\n    if (scrollListener) {\n        return scrollListener;\n    }\n    const srollEvent = Observable.create((observer) => {\n        const eventName = 'scroll';\n        const handler = (event) => observer.next(event);\n        const options = { passive: true, capture: false };\n        scrollTarget.addEventListener(eventName, handler, options);\n        return () => scrollTarget.removeEventListener(eventName, handler, options);\n    });\n    const listener = sampleObservable(srollEvent);\n    scrollListeners.set(scrollTarget, listener);\n    return listener;\n};\n\nconst isVisible$2 = ({ element, offset, scrollContainer }, getWindow = () => window) => {\n    const elementBounds = Rect.fromElement(element);\n    if (elementBounds === Rect.empty) {\n        return false;\n    }\n    const windowBounds = Rect.fromWindow(getWindow());\n    elementBounds.inflate(offset);\n    if (scrollContainer) {\n        const scrollContainerBounds = Rect.fromElement(scrollContainer);\n        const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n        return elementBounds.intersectsWith(intersection);\n    }\n    else {\n        return elementBounds.intersectsWith(windowBounds);\n    }\n};\nconst getObservable$2 = (attributes) => {\n    if (attributes.customObservable) {\n        return attributes.customObservable.pipe(startWith(''));\n    }\n    if (attributes.scrollContainer) {\n        return getScrollListener(attributes.scrollContainer);\n    }\n    return getScrollListener(window);\n};\nconst scrollPreset = Object.assign({}, sharedPreset, {\n    isVisible: isVisible$2,\n    getObservable: getObservable$2\n});\n\nexport { LazyLoadImageDirective, LazyLoadImageModule, intersectionObserverPreset, scrollPreset };\n//# sourceMappingURL=ng-lazyload-image.js.map\n","export default \"<nz-card [nzCover]=\\\"coverTemplate\\\"\\n         [nzActions]=\\\"actions\\\"\\n         [nzHoverable]=\\\"hoverable\\\"\\n>\\n  <nz-card-meta\\n    [nzTitle]=\\\"title\\\"\\n    [nzDescription]=\\\"description\\\"\\n    [nzAvatar]=\\\"avatar\\\"\\n  ></nz-card-meta>\\n</nz-card>\\n\"","export default \"<hb-card\\n  [title]=\\\"title\\\"\\n  [description]=\\\"description\\\"\\n  [hoverable]=\\\"hoverable\\\"\\n  [id]=\\\"id\\\"\\n  [coverTemplate]=\\\"coverTemplate\\\"\\n  [avatar]=\\\"avatarTemplate\\\"\\n></hb-card>\\n\\n<ng-template #coverTemplate>\\n  <img [src]=\\\"pixelSrc || 'assets/contact.svg'\\\">\\n  <img lazyLoad=\\\"{{src}}\\\">\\n</ng-template>\\n\\n<ng-template #avatarTemplate>\\n  <nz-avatar class=\\\"avatar\\\" [nzSrc]=\\\"icon\\\"></nz-avatar>\\n</ng-template>\\n\"","export default \"<nz-input-group [nzSuffix]=\\\"searchIcon\\\">\\n  <input type=\\\"text\\\" nz-input placeholder=\\\"type to filter results\\\" #searchInput/>\\n</nz-input-group>\\n\\n<ng-template #searchIcon>\\n  <i nz-icon nzType=\\\"search\\\"></i>\\n</ng-template>\\n\"","export default \"<nz-layout class=\\\"contact-page\\\">\\n  <nz-header class=\\\"contact-header\\\">\\n    <nz-page-header>\\n      <nz-page-header-title>My Contacts</nz-page-header-title>\\n      <nz-page-header-subtitle>Here you can find all your contacts</nz-page-header-subtitle>\\n      <nz-page-header-extra nz-col nzXs=\\\"24\\\" nzSm=\\\"24\\\" nzMd=\\\"12\\\" nzLg=\\\"6\\\" nzXl=\\\"6\\\">\\n        <hb-input-search (onChange)=\\\"onSearchChanged($event)\\\"></hb-input-search>\\n      </nz-page-header-extra>\\n    </nz-page-header>\\n  </nz-header>\\n  <nz-content>\\n    <nz-spin nzTip=\\\"Loading...\\\" [nzSpinning]=\\\"listLoading\\\" [nzDelay]=\\\"500\\\">\\n      <nz-content class=\\\"contact-content\\\">\\n        <div nz-row class=\\\"img-list-container\\\">\\n          <div nz-col nzXs=\\\"12\\\" nzSm=\\\"12\\\" nzMd=\\\"8\\\" nzLg=\\\"6\\\" nzXl=\\\"6\\\"\\n               style=\\\" padding: 15px; float: left!important;\\\"\\n               *ngFor=\\\"let contact of filteredList\\\">\\n            <hb-contact-card\\n              [title]=\\\"contact.title\\\"\\n              [description]=\\\"contact.description\\\"\\n              [src]=\\\"contact.src\\\"\\n              [pixelSrc]=\\\"contact.pixelSrc\\\"\\n              [id]=\\\"contact.id\\\"\\n              [icon]=\\\"contact.icon\\\">\\n            </hb-contact-card>\\n          </div>\\n        </div>\\n      </nz-content>\\n    </nz-spin>\\n  </nz-content>\\n</nz-layout>\\n\"","export default \":host {\\n  width: 100%;\\n}\\n:host .ng-lazyloaded {\\n  opacity: 1;\\n}\\n:host ::ng-deep .ant-card {\\n  background: transparent;\\n}\\n:host ::ng-deep .ant-card-actions {\\n  background: transparent;\\n  border-top: none;\\n}\\n.image-title-form {\\n  width: 260px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hdmltYXNsYXRpMS9wcm9qZWN0cy9ob25leWJvb2svc3JjL2FwcC9jb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9jYXJkL2NhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxXQUFBO0FDREY7QURHRTtFQUNFLFVBQUE7QUNESjtBRE1JO0VBQ0UsdUJBQUE7QUNKTjtBRE9JO0VBQ0UsdUJBQUE7RUFDQSxnQkFBQTtBQ0xOO0FEV0E7RUFDRSxZQUFBO0FDUkYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi92YXJpYWJsZXNcIjtcblxuOmhvc3Qge1xuICB3aWR0aDogMTAwJTtcblxuICAubmctbGF6eWxvYWRlZCB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuXG4gIDo6bmctZGVlcCB7XG5cbiAgICAuYW50LWNhcmQge1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgLmFudC1jYXJkLWFjdGlvbnMge1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItdG9wOiBub25lO1xuICAgIH1cblxuICB9XG59XG5cbi5pbWFnZS10aXRsZS1mb3JtIHtcbiAgd2lkdGg6IDI2MHB4O1xufVxuIiwiOmhvc3Qge1xuICB3aWR0aDogMTAwJTtcbn1cbjpob3N0IC5uZy1sYXp5bG9hZGVkIHtcbiAgb3BhY2l0eTogMTtcbn1cbjpob3N0IDo6bmctZGVlcCAuYW50LWNhcmQge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbjpob3N0IDo6bmctZGVlcCAuYW50LWNhcmQtYWN0aW9ucyB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wOiBub25lO1xufVxuXG4uaW1hZ2UtdGl0bGUtZm9ybSB7XG4gIHdpZHRoOiAyNjBweDtcbn0iXX0= */\"","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\n\n@Component({\n  selector: 'hb-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  /**\n   * @description card id\n   */\n  @Input() public id?: string | number;\n\n  /**\n   * @description card title\n   */\n  @Input() public title: string;\n\n  /**\n   * @description card description to display under the title\n   */\n  @Input() public description?: string;\n\n  /**\n   * @description an external template for different actions,\n   * each html template must contain the template id and can have icon with CB function\n   * can contains up to 3 actions,\n   * @example\n   * <ng-template #actionSetting>\n   *   <i nz-icon nzType=\"delete\" (click)=\"onDeleted(img)\"></i>\n   * </ng-template>\n   */\n  @Input() public actions: Array<TemplateRef<void>> = [];\n\n  @Input() public coverTemplate: TemplateRef<void> = null;\n\n  @Input() public avatar: TemplateRef<void> = null;\n\n  /**\n   * rather or not car should show box shadow on hover\n   */\n  @Input() public hoverable = true;\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// NG\nimport {NgModule} from '@angular/core';\n\n// APP\nimport {CardComponent} from \"./card.component\";\nimport {NgZorroAntdModule} from \"ng-zorro-antd\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    CardComponent\n  ],\n  imports: [\n    CommonModule,\n    NgZorroAntdModule\n  ],\n  exports: [\n    CardComponent\n  ]\n})\nexport class CardModule {\n}\n","export { CardComponent } from './card.component';\n","export default \":host ::ng-deep img {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  max-width: 100%;\\n}\\n:host ::ng-deep .ant-card {\\n  overflow: hidden;\\n}\\n:host ::ng-deep .ant-card:hover .ant-card-body {\\n  margin-top: -115px;\\n  height: 125px;\\n  transition-timing-function: ease-in;\\n  transition: 0.35s;\\n}\\n:host ::ng-deep .ant-card-body {\\n  background: #f0f2f5;\\n  margin-top: -57px;\\n  position: relative;\\n  height: 67px;\\n  transition-timing-function: ease-out;\\n  transition: 0.35s;\\n}\\n:host ::ng-deep .ant-card-cover {\\n  width: auto;\\n  height: 250px;\\n  position: relative;\\n  overflow: hidden;\\n}\\n:host ::ng-deep .ant-avatar {\\n  position: absolute;\\n  top: -20px;\\n  left: 15px;\\n}\\n:host ::ng-deep .ant-card-meta-title {\\n  margin-top: 10px;\\n}\\n:host ::ng-deep .avatar {\\n  background: white;\\n  width: 45px;\\n  height: 45px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hdmltYXNsYXRpMS9wcm9qZWN0cy9ob25leWJvb2svc3JjL2FwcC9jb21wb25lbnRzL2NvbnRhY3QtY2FyZC9jb250YWN0LWNhcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvY29udGFjdC1jYXJkL2NvbnRhY3QtY2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHSTtFQUNFLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxlQUFBO0FDRk47QURLSTtFQUNFLGdCQUFBO0FDSE47QURNUTtFQUNFLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLG1DQUFBO0VBQ0EsaUJBQUE7QUNKVjtBRFNJO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLG9DQUFBO0VBQ0EsaUJBQUE7QUNQTjtBRFVJO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDUk47QURXSTtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7QUNUTjtBRFlJO0VBQ0UsZ0JBQUE7QUNWTjtBRGFJO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ1hOIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0LWNhcmQvY29udGFjdC1jYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICA6Om5nLWRlZXAge1xuXG4gICAgaW1nIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IDA7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLmFudC1jYXJkIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICAuYW50LWNhcmQtYm9keSB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogLTExNXB4O1xuICAgICAgICAgIGhlaWdodDogMTI1cHg7XG4gICAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW47XG4gICAgICAgICAgdHJhbnNpdGlvbjogMC4zNXM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAuYW50LWNhcmQtYm9keSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjBmMmY1O1xuICAgICAgbWFyZ2luLXRvcDogLTU3cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBoZWlnaHQ6IDY3cHg7XG4gICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gICAgICB0cmFuc2l0aW9uOiAwLjM1cztcbiAgICB9XG5cbiAgICAuYW50LWNhcmQtY292ZXIge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBoZWlnaHQ6IDI1MHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAuYW50LWF2YXRhciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC0yMHB4O1xuICAgICAgbGVmdDogMTVweDtcbiAgICB9XG5cbiAgICAuYW50LWNhcmQtbWV0YS10aXRsZSB7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cblxuICAgIC5hdmF0YXIge1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICB3aWR0aDogNDVweDtcbiAgICAgIGhlaWdodDogNDVweDtcbiAgICB9XG4gIH1cbn1cbiIsIjpob3N0IDo6bmctZGVlcCBpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuOmhvc3QgOjpuZy1kZWVwIC5hbnQtY2FyZCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG46aG9zdCA6Om5nLWRlZXAgLmFudC1jYXJkOmhvdmVyIC5hbnQtY2FyZC1ib2R5IHtcbiAgbWFyZ2luLXRvcDogLTExNXB4O1xuICBoZWlnaHQ6IDEyNXB4O1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbjtcbiAgdHJhbnNpdGlvbjogMC4zNXM7XG59XG46aG9zdCA6Om5nLWRlZXAgLmFudC1jYXJkLWJvZHkge1xuICBiYWNrZ3JvdW5kOiAjZjBmMmY1O1xuICBtYXJnaW4tdG9wOiAtNTdweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDY3cHg7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgdHJhbnNpdGlvbjogMC4zNXM7XG59XG46aG9zdCA6Om5nLWRlZXAgLmFudC1jYXJkLWNvdmVyIHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMjUwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbjpob3N0IDo6bmctZGVlcCAuYW50LWF2YXRhciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMjBweDtcbiAgbGVmdDogMTVweDtcbn1cbjpob3N0IDo6bmctZGVlcCAuYW50LWNhcmQtbWV0YS10aXRsZSB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG46aG9zdCA6Om5nLWRlZXAgLmF2YXRhciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICB3aWR0aDogNDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xufSJdfQ== */\"","// ANGULAR\nimport {Component, Input, OnInit} from '@angular/core';\n\n// APP\nimport {CardComponent} from \"../card\";\n\n@Component({\n  selector: 'hb-contact-card',\n  templateUrl: './contact-card.component.html',\n  styleUrls: ['./contact-card.component.scss']\n})\nexport class ContactCardComponent extends CardComponent implements OnInit {\n\n  /**\n   * @description src property for card cover image\n   */\n  @Input() public src?: string;\n\n  /**\n   * @description a lazy load pixel image to display until image is fully loaded\n   */\n  @Input() public pixelSrc?: string;\n\n  /**\n   * @description img alt text\n   */\n  @Input() public alt?: string;\n\n  /**\n   * @description contact icon\n   */\n  @Input() public icon?: string;\n\n  constructor() {\n    super();\n  }\n}\n","// NG\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n// VENDORS\nimport {NgZorroAntdModule, NZ_ICONS} from \"ng-zorro-antd\";\nimport {DeleteOutline, EditOutline, MoreOutline} from \"@ant-design/icons-angular/icons\";\nimport {IconDefinition} from \"@ant-design/icons-angular\";\nimport {LazyLoadImageModule} from \"ng-lazyload-image\";\n\n// APP\nimport {ContactCardComponent} from \"./contact-card.component\";\nimport {CardModule} from \"../card/card.module\";\n\nconst icons: IconDefinition[] = [ DeleteOutline, EditOutline, MoreOutline ];\n\n@NgModule({\n  declarations: [\n    ContactCardComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    LazyLoadImageModule,\n    CardModule,\n  ],\n  exports: [\n    ContactCardComponent\n  ],\n  providers: [\n    {\n      provide: NZ_ICONS, useValue: icons\n    }\n  ]\n})\nexport class ContactCardModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5wdXQtc2VhcmNoL2lucHV0LXNlYXJjaC5jb21wb25lbnQuc2NzcyJ9 */\"","// NG\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  ViewChild\n} from '@angular/core';\n\n// VENDORS\nimport {fromEvent, Subject} from \"rxjs\";\nimport {debounceTime, distinctUntilChanged, filter, takeUntil, tap} from \"rxjs/operators\";\n\n@Component({\n  selector: 'hb-input-search',\n  templateUrl: './input-search.component.html',\n  styleUrls: ['./input-search.component.scss']\n})\nexport class InputSearchComponent implements AfterViewInit, OnDestroy {\n\n  @Output() onChange = new EventEmitter<string>();\n\n  /**\n   * @description search input element\n   */\n  @ViewChild('searchInput', {static: false}) private searchInput: ElementRef;\n\n  /**\n   * use to close all component stream ant prevent potential memory leaks\n   */\n  private componentUnsubscribe$ = new Subject<void>();\n\n  constructor() {\n  }\n\n\n  ngAfterViewInit() {\n    //create a stream from the input change event\n    fromEvent(this.searchInput.nativeElement, 'keyup')\n      .pipe(\n        // close stream\n        takeUntil(this.componentUnsubscribe$),\n        //ignore when empty\n        filter(Boolean),\n        //delay the output event\n        debounceTime(300),\n        // compare between prev and current value and fire only if there is changes\n        distinctUntilChanged(),\n        // do action when change\n        tap(() => {\n          const inputValue = this.searchInput.nativeElement.value;\n          this.onChange.emit(inputValue);\n        })\n      )\n      // start to listing\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.componentUnsubscribe$.next();\n    this.componentUnsubscribe$.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {InputSearchComponent} from \"./input-search.component\";\nimport {NzIconModule, NzInputModule} from \"ng-zorro-antd\";\n\n\n\n@NgModule({\n  declarations: [\n    InputSearchComponent\n  ],\n  imports: [\n    CommonModule,\n    NzInputModule,\n    NzIconModule\n  ],\n  exports:[\n    InputSearchComponent\n  ]\n})\nexport class InputSearchModule { }\n","// ANGULAR\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n// APP\nimport { ContactListComponent } from './contact-list.component';\nimport {SharedModule} from \"../../shared\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactListComponent\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\n\n@NgModule({\n  declarations: [],\n  imports: [\n    SharedModule\n  ]\n})\nexport class ContactListRoutingModule {\n}\n","export default \".contact-page .contact-header {\\n  background: transparent;\\n}\\n.contact-page .loading-button:before {\\n  background: transparent;\\n}\\n.contact-page .contact-content {\\n  min-height: 100vh;\\n}\\n.contact-page .img-list-container {\\n  max-width: 1280px;\\n  margin: 0 auto;\\n}\\n.contact-page .ant-layout-header {\\n  height: auto;\\n  padding: 0;\\n  border-bottom: 1px solid #dedede;\\n}\\n.contact-page hb-input-search input {\\n  background: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hdmltYXNsYXRpMS9wcm9qZWN0cy9ob25leWJvb2svc3JjL2FwcC9mZWF0dXJlcy9jb250YWN0LWxpc3QvY29udGFjdC1saXN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mZWF0dXJlcy9jb250YWN0LWxpc3QvY29udGFjdC1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsdUJBQUE7QUNBSjtBRElJO0VBQ0UsdUJBQUE7QUNGTjtBRE1FO0VBQ0UsaUJBQUE7QUNKSjtBRE9FO0VBQ0UsaUJBQUE7RUFDQSxjQUFBO0FDTEo7QURRRTtFQUNFLFlBQUE7RUFDQSxVQUFBO0VBQ0EsZ0NBQUE7QUNOSjtBRFVJO0VBQ0UsdUJBQUE7QUNSTiIsImZpbGUiOiJzcmMvYXBwL2ZlYXR1cmVzL2NvbnRhY3QtbGlzdC9jb250YWN0LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFjdC1wYWdlIHtcbiAgLmNvbnRhY3QtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC5sb2FkaW5nLWJ1dHRvbiB7XG4gICAgJjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICB9XG5cbiAgLmNvbnRhY3QtY29udGVudCB7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gIH1cblxuICAuaW1nLWxpc3QtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDEyODBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxuXG4gIC5hbnQtbGF5b3V0LWhlYWRlciB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gIH1cblxuICBoYi1pbnB1dC1zZWFyY2gge1xuICAgIGlucHV0IHtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIH1cbiAgfVxufVxuXG5cbiIsIi5jb250YWN0LXBhZ2UgLmNvbnRhY3QtaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG4uY29udGFjdC1wYWdlIC5sb2FkaW5nLWJ1dHRvbjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbi5jb250YWN0LXBhZ2UgLmNvbnRhY3QtY29udGVudCB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xufVxuLmNvbnRhY3QtcGFnZSAuaW1nLWxpc3QtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLmNvbnRhY3QtcGFnZSAuYW50LWxheW91dC1oZWFkZXIge1xuICBoZWlnaHQ6IGF1dG87XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGVkZWRlO1xufVxuLmNvbnRhY3QtcGFnZSBoYi1pbnB1dC1zZWFyY2ggaW5wdXQge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn0iXX0= */\"","// ANGULAR\nimport {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\n// APP\nimport {ContactListFacade} from './services/contact-list.facade';\nimport {ContactCard} from \"../../components/contact-card/contact-card.model\";\n\n@Component({\n  selector: 'hb-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ContactListComponent implements OnInit {\n\n  /**\n   * array of contract to display\n   */\n  public filteredList: ContactCard[] = [];\n\n  /**\n   * loader when getting the lis of img\n   */\n  public listLoading = true;\n\n  /**\n   * contract list\n   */\n  private contactList: ContactCard[] = [];\n\n  constructor(private facade: ContactListFacade) {\n\n  }\n\n  async ngOnInit() {\n    try {\n      this.contactList = await this.facade.getContactList();\n      this.filteredList = [...this.contactList];\n    } catch (e) {\n      // error handling\n    }\n    this.listLoading = false;\n  }\n\n  onSearchChanged(text: string) {\n    if (!text) {\n      return this.filteredList = [...this.contactList];\n    }\n    return this.filteredList = this.contactList\n      .filter((contact) => {\n        if (contact.description.toLowerCase().includes(text) || contact.title.toLowerCase().includes(text)) {\n          return contact;\n        }\n      });\n  }\n}\n","// ANGULAR\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// VENDORS\nimport {LazyLoadImageModule} from \"ng-lazyload-image\";\n\n// APP\nimport { ContactListComponent } from './contact-list.component';\nimport { ContactListRoutingModule } from './contact-list-routing.module';\nimport {SharedModule} from \"../../shared\";\n\n\n@NgModule({\n  declarations: [\n    ContactListComponent\n  ],\n  imports: [\n    ContactListRoutingModule,\n    ReactiveFormsModule,\n    LazyLoadImageModule,\n    SharedModule\n  ]\n})\nexport class ContactListModule {\n}\n","export { ContactListModule } from './contact-list.module';\nexport { ContactListComponent } from './contact-list.component';\nexport { ContactListFacade } from './services/contact-list.facade';\nexport { ContactListService } from './services/contact-list.service';\n","// NG\nimport {Injectable} from '@angular/core';\n\n// APP\nimport {ContactListService} from './contact-list.service';\nimport {ContactCard} from \"../../../components/contact-card/contact-card.model\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactListFacade {\n\n  constructor(private contactListService: ContactListService) {\n  }\n\n  /**\n   * get a pager options and return img card object\n   */\n  public getContactList(): Promise<ContactCard[]> {\n    return this.contactListService.getContactList()\n      .toPromise()\n      .then(res => res.map((contact) => {\n          return {\n            title: contact.name,\n            src: contact.profile_image,\n            description: [contact.company_name, contact.job, contact.email].join(', '),\n            icon: contact.icon\n          }\n        }\n      ))\n  }\n\n}\n","// ANGULAR\nimport { Injectable } from '@angular/core';\n\n//VENDOR\nimport {Observable} from \"rxjs\";\n\n// APP\nimport {ContactsService} from \"../../../shared/services/contacts\";\nimport {ContactModel} from \"../../../shared/services/contacts/contact.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactListService {\n\n  constructor(private contactsApi: ContactsService) {\n  }\n\n  /**\n   * get a pager options and return list of photos from the imgApi\n   */\n  public getContactList(): Observable<ContactModel[]> {\n    return this.contactsApi.getContactList();\n  }\n\n}\n","export { SharedModule } from './share.module';\nexport * from './services/contacts';\n","// NG\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\n// VENDOR\n\n// APP\nimport {NgZorroAntdModule} from \"ng-zorro-antd\";\nimport {LazyLoadImageModule} from \"ng-lazyload-image\";\nimport {ContactCardModule} from \"../components/contact-card/contact-card.module\";\nimport {CardModule} from \"../components/card/card.module\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {InputSearchModule} from \"../components/input-search/input-search.module\";\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    // NG\n    CommonModule,\n    HttpClientModule,\n\n    // VENDOR\n    NgZorroAntdModule,\n    LazyLoadImageModule.forRoot({}),\n\n    // APP\n    ContactCardModule,\n    CardModule,\n    InputSearchModule\n  ],\n  exports: [\n    // NG\n    CommonModule,\n    HttpClientModule,\n\n    // VENDOR\n    NgZorroAntdModule,\n    LazyLoadImageModule,\n\n    // APP\n    ContactCardModule,\n    CardModule,\n    InputSearchModule\n  ]\n})\nexport class SharedModule {\n}\n"],"sourceRoot":"webpack:///"}